image: docker:stable

stages:
  - build
  - docker
  - release
  - deploy

variables:
  DEPLOYMENT_REPO: git@gitlab.simbirsoft:devops/simtrack.git

before_script:
  - mkdir -p ~/.docker/ && echo "$DOCKER_AUTH_CONFIG" > ~/.docker/config.json
  - export DOCKER_PREFIX=dr.simbirsoft1.com/simtrack
  - export CI_SHORT_REF_NAME=$(echo $CI_COMMIT_REF_NAME | sed 's/\//-/g' )
  - export TAG="${CI_SHORT_REF_NAME}-${CI_COMMIT_SHA:0:8}"

build_fe:
  image: node:8-alpine
  stage: build
  script:
    - npm install
    - npm run build
  cache:
    key: "${CI_SHORT_REF_NAME}-fe"
    paths:
      - .npm/
      - node_modules/
  artifacts:
    name: "${TAG}-fe"
    expire_in: 1 week
    when: on_success
    paths:
      - build/
  tags:
   - docker

build_docker_fe:
  image: docker:stable
  stage: docker
  script:
    - cp -f ci/Dockerfile.fe ./
    - docker build --rm --tag $DOCKER_PREFIX/fe:$TAG -f Dockerfile.fe .
  tags:
   - docker

release:
  image: docker:stable
  stage: release
  script:
    - docker tag $DOCKER_PREFIX/fe:$TAG $DOCKER_PREFIX/fe:$CI_SHORT_REF_NAME
    - docker push $DOCKER_PREFIX/fe:$TAG
    - docker push $DOCKER_PREFIX/fe:$CI_SHORT_REF_NAME
    - docker rmi $DOCKER_PREFIX/fe:$CI_SHORT_REF_NAME
  tags:
   - docker

deploy_to_dev:
  image: dr.simbirsoft1.com/library/ansible:2.4
  stage: deploy
  variables:
    CURRENT_DEPLOYMENT_KEY: "$DEV_DEPLOYMENT_KEY"
    CURRENT_DEPLOYMENT_ENV: "dev"
  script:
    - mkdir -p ~/.ssh/
    - echo -e "Host *\n\rStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - echo "$CURRENT_DEPLOYMENT_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval $(ssh-agent -s)
    - ssh-add ~/.ssh/id_rsa
    - git clone $DEPLOYMENT_REPO ~/deploy
    - cd ~/deploy
    - ansible-playbook -i environments/${CURRENT_DEPLOYMENT_ENV}/inventory deploy.yaml --extra-vars "fe_version=$TAG be_version=$CI_SHORT_REF_NAME"
  only:
    - develop
  environment:
    name: dev
    url: https://simtrack-dev.simbirsoft/
  tags:
   - docker

deploy_to_test:
  image: dr.simbirsoft1.com/library/ansible:2.4
  stage: deploy
  variables:
    CURRENT_DEPLOYMENT_KEY: "$TEST_DEPLOYMENT_KEY"
    CURRENT_DEPLOYMENT_ENV: "test"
  script:
    - mkdir -p ~/.ssh/
    - echo -e "Host *\n\rStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - echo "$CURRENT_DEPLOYMENT_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval $(ssh-agent -s)
    - ssh-add ~/.ssh/id_rsa
    - git clone $DEPLOYMENT_REPO ~/deploy
    - cd ~/deploy
    - ansible-playbook -i environments/${CURRENT_DEPLOYMENT_ENV}/inventory deploy.yaml --extra-vars "fe_version=$TAG be_version=$CI_SHORT_REF_NAME"
  only:
    - test
  when: manual
  environment:
    name: test
    url: https://simtrack-test.simbirsoft/
  tags:
   - docker

deploy_to_prod:
  image: dr.simbirsoft1.com/library/ansible:2.4
  stage: deploy
  variables:
    CURRENT_DEPLOYMENT_KEY: "$PROD_DEPLOYMENT_KEY"
    CURRENT_DEPLOYMENT_ENV: "prod"
  script:
    - mkdir -p ~/.ssh/
    - echo -e "Host *\n\rStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - echo "$CURRENT_DEPLOYMENT_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval $(ssh-agent -s)
    - ssh-add ~/.ssh/id_rsa
    - git clone $DEPLOYMENT_REPO ~/deploy
    - cd ~/deploy
    - ansible-playbook -i environments/${CURRENT_DEPLOYMENT_ENV}/inventory deploy.yaml --extra-vars "fe_version=$TAG be_version=$CI_SHORT_REF_NAME"
  only:
    - master
  when: manual
  environment:
    name: prod
    url: https://simtrack.simbirsoft/
  tags:
   - docker

deploy_to_custom:
  image: dr.simbirsoft1.com/library/ansible:2.4
  stage: deploy
  variables:
    CURRENT_DEPLOYMENT_KEY: "$DEV_DEPLOYMENT_KEY"
    CURRENT_DEPLOYMENT_ENV: "custom"
  script:
    - mkdir -p ~/.ssh/
    - echo -e "Host *\n\rStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - echo "$CURRENT_DEPLOYMENT_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval $(ssh-agent -s)
    - ssh-add ~/.ssh/id_rsa
    - git clone $DEPLOYMENT_REPO ~/deploy
    - cd ~/deploy
    - ansible-playbook -i environments/${CURRENT_DEPLOYMENT_ENV}/inventory deploy.yaml --extra-vars "fe_version=$TAG be_version=$CI_SHORT_REF_NAME"
  when: manual
  environment:
    name: custom
    url: http://simtrack-custom.simbirsoft/
  tags:
   - docker    

